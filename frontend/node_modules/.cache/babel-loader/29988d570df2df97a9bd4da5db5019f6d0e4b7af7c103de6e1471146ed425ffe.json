{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dulra\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport './App.css';\nimport Register from \"./components/Registration\";\nimport StoreFunctions from \"./components/StoreFunctions\";\nimport Login from \"./components/Login\";\nimport GetData from \"./components/getUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [data, setData] = useState({\n    username: \"\",\n    password: \"\",\n    mail: \"\",\n    photo: \"\"\n  });\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  async function Register(e) {\n    e.preventDefault();\n    if (setResponse.length !== 0) {\n      setResponse(\"\");\n    }\n    try {\n      setLoading(true);\n      const datax = new FormData();\n      datax.append(\"username\", data.username);\n      datax.append(\"password\", data.password);\n      datax.append(\"mail\", data.mail);\n      datax.append(\"photo\", data.photo);\n      const r = await Axios.post(\"http://localhost:8000/register\", datax);\n      if (r.status === 400) {\n        setResponse(\"Required credentials not filled\");\n      } else if (r.status === 409) {\n        setResponse(\"User already exists\");\n      } else if (r.status === 201) {\n        setResponse(\"User created\");\n      } else {\n        setResponse(\"Internal Server Error\");\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Register, {\n      data: data,\n      setData: setData,\n      Register: Register,\n      response: response,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StoreFunctions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nrCf6XyPpo4h1dBj1ERb7oBhjZw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Route","Routes","useState","Axios","Register","StoreFunctions","Login","GetData","jsxDEV","_jsxDEV","App","_s","data","setData","username","password","mail","photo","response","setResponse","loading","setLoading","e","preventDefault","length","datax","FormData","append","r","post","status","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dulra/OneDrive/Desktop/backend/frontend/src/App.js"],"sourcesContent":["import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport {useState} from \"react\";\nimport Axios from \"axios\";\nimport './App.css';\nimport Register from \"./components/Registration\";\nimport StoreFunctions from \"./components/StoreFunctions\";\nimport Login from \"./components/Login\";\nimport GetData from \"./components/getUsers\";\n\nexport default function App() {\n  const [data, setData] = useState({\n    username: \"\",\n    password: \"\",\n    mail: \"\",\n    photo: \"\",\n  });\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function Register(e) {\n    e.preventDefault();\n    if (setResponse.length !== 0) {\n      setResponse(\"\");\n    }\n    try {\n      setLoading(true);\n      const datax = new FormData();\n      datax.append(\"username\", data.username);\n      datax.append(\"password\", data.password);\n      datax.append(\"mail\", data.mail);\n\n      datax.append(\"photo\", data.photo);\n\n      const r = await Axios.post(\"http://localhost:8000/register\", datax);\n      if (r.status === 400) {\n        setResponse(\"Required credentials not filled\");\n      } else if (r.status === 409) {\n        setResponse(\"User already exists\");\n      } else if (r.status === 201) {\n        setResponse(\"User created\");\n      } else {\n        setResponse(\"Internal Server Error\");\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Register data={data} setData={setData} Register={Register} response={response} loading={loading}></Register>\n      <br></br>\n      <StoreFunctions></StoreFunctions>\n      <br></br>\n      <Login></Login>\n      <br></br>\n      <GetData></GetData>\n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}