{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dulra\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"./Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [data, setData] = useState({\n    username: \"\",\n    password: \"\",\n    mail: \"\",\n    bio: \"\",\n    photo: null\n  });\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setData(prevData => ({\n      ...prevData,\n      photo: file\n    }));\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (response.length !== 0) {\n      setResponse(\"\");\n    }\n    try {\n      setLoading(true);\n      const datax = new FormData();\n      for (let key in data) {\n        if (data[key] !== null) {\n          datax.append(key, data[key]);\n        }\n      }\n      const r = await Axios.post(\"http://localhost:8000/register\", datax, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (r.status === 201) {\n        setResponse(\"User created\");\n      } else if (r.status === 409) {\n        setResponse(\"User already exists\");\n      } else if (r.status === 400) {\n        setResponse(\"Required credentials not filled\");\n      } else {\n        setResponse(\"Internal Server Error\");\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setResponse(\"Error occurred. Please try again.\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: data.username,\n        onChange: handleInputChange,\n        required: true,\n        placeholder: \"Enter Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: data.password,\n        onChange: handleInputChange,\n        required: true,\n        placeholder: \"Enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"mail\",\n        value: data.mail,\n        onChange: handleInputChange,\n        required: true,\n        placeholder: \"Enter mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bio\",\n        value: data.bio,\n        onChange: handleInputChange,\n        placeholder: \"Enter Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"10vw\",\n          height: \"10vh\"\n        },\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"USfhbLXRk8aQ2ALpoNVusFkvK/Q=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Axios","jsxDEV","_jsxDEV","Register","_s","data","setData","username","password","mail","bio","photo","response","setResponse","loading","setLoading","handleInputChange","e","name","value","target","prevData","handleFileChange","file","files","handleRegister","preventDefault","length","datax","FormData","key","append","r","post","headers","status","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","placeholder","style","width","height","disabled","_c","$RefreshReg$"],"sources":["C:/Users/dulra/OneDrive/Desktop/backend/frontend/src/components/Registration.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./Register.css\";\r\n\r\nexport default function Register() {\r\n  const [data, setData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    mail: \"\",\r\n    bio: \"\",\r\n    photo: null,\r\n  });\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setData((prevData) => ({ ...prevData, photo: file }));\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (response.length !== 0) {\r\n      setResponse(\"\");\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const datax = new FormData();\r\n      for (let key in data) {\r\n        if (data[key] !== null) {\r\n          datax.append(key, data[key]);\r\n        }\r\n      }\r\n\r\n      const r = await Axios.post(\"http://localhost:8000/register\", datax, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (r.status === 201) {\r\n        setResponse(\"User created\");\r\n      } else if (r.status === 409) {\r\n        setResponse(\"User already exists\");\r\n      } else if (r.status === 400) {\r\n        setResponse(\"Required credentials not filled\");\r\n      } else {\r\n        setResponse(\"Internal Server Error\");\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setResponse(\"Error occurred. Please try again.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleRegister}>\r\n        <h1>Register</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={data.username}\r\n          onChange={handleInputChange}\r\n          required\r\n          placeholder=\"Enter Username\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={data.password}\r\n          onChange={handleInputChange}\r\n          required\r\n          placeholder=\"Enter password\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"mail\"\r\n          value={data.mail}\r\n          onChange={handleInputChange}\r\n          required\r\n          placeholder=\"Enter mail\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"bio\"\r\n          value={data.bio}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter Bio\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <p>{response}</p>\r\n        <button\r\n          type=\"submit\"\r\n          style={{ width: \"10vw\", height: \"10vh\" }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Loading...\" : \"Register\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}